{"version":3,"file":"markdownRenderer.js","sourceRoot":"","sources":["../../src/__tests__/markdownRenderer.ts"],"names":[],"mappings":"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","sourcesContent":["import * as marked from \"marked\";\r\nimport { MarkdownRenderer } from \"../markdownRenderer\";\r\n\r\ndescribe(\"list\", () => {\r\n    it(\"nested ordered\", () => {\r\n        const input = \"1. a\\n 1. b\\n  xyz\\n 2. c\\n2. d\";\r\n        const output = \"\\n1. a\\n 1. b\\n  xyz\\n 2. c\\n2. d\\n\\n\";\r\n        const parsed = marked.parse(input, { renderer: new MarkdownRenderer() });\r\n        expect(parsed).toBe(output);\r\n    });\r\n    it(\"mixed\", () => {\r\n        const input = `\r\n1. a\r\n | b | c |\r\n |--|--|\r\n | 1 | 2 |\r\n2. b\r\n\r\n`;\r\n        const output = `\r\n1. a\r\n | b | c |\r\n |--|--|\r\n | 1 | 2 |\r\n2. b\r\n\r\n`;\r\n        const parsed = marked.parse(input, { renderer: new MarkdownRenderer() });\r\n        expect(parsed).toBe(output);\r\n    });\r\n});\r\n\r\ndescribe(\"tables\", () => {\r\n    it(\"headers\", () => {\r\n        const input = \"| a | b | c | d |\\n|--|:--|:--:|--:|\\n| 1 | 2 | 3 | 4 |\\n\";\r\n        const output = \"\\n| a | b | c | d |\\n|--|:--|:--:|--:|\\n| 1 | 2 | 3 | 4 |\\n\\n\";\r\n        const parsed = marked.parse(input, { renderer: new MarkdownRenderer() });\r\n        expect(parsed).toBe(output);\r\n    });\r\n});\r\n\r\ndescribe(\"unescaped\", () => {\r\n    it(\"text\", () => {\r\n        const input = `a & b`;\r\n        const output = `a & b\\n\\n`;\r\n        const parsed = marked.parse(input, { renderer: new MarkdownRenderer() });\r\n        expect(parsed).toBe(output);\r\n    });\r\n    it(\"text preencoded\", () => {\r\n        // unfortunately we cannot handle decoding entities with full fidelity.\r\n        const input = `a &amp; b`;\r\n        const output = `a & b\\n\\n`;\r\n        const parsed = marked.parse(input, { renderer: new MarkdownRenderer() });\r\n        expect(parsed).toBe(output);\r\n    });\r\n    it(\"codespan\", () => {\r\n        const input = \"`a & b`\";\r\n        const output = \"`a & b`\\n\\n\";\r\n        const parsed = marked.parse(input, { renderer: new MarkdownRenderer() });\r\n        expect(parsed).toBe(output);\r\n    });\r\n    it(\"code\", () => {\r\n        const input = \"```\\na & b\\n```\";\r\n        const output = \"```\\na & b\\n```\\n\\n\";\r\n        const parsed = marked.parse(input, { renderer: new MarkdownRenderer() });\r\n        expect(parsed).toBe(output);\r\n    });\r\n    it(\"link\", () => {\r\n        const input = \"[a&b](c \\\"d&e\\\")\";\r\n        const output = \"[a&b](c \\\"d&e\\\")\\n\\n\";\r\n        const parsed = marked.parse(input, { renderer: new MarkdownRenderer() });\r\n        expect(parsed).toBe(output);\r\n    });\r\n    it(\"image\", () => {\r\n        const input = \"![a&b](c \\\"d&e\\\")\";\r\n        const output = \"![a&b](c \\\"d&e\\\")\\n\\n\";\r\n        const parsed = marked.parse(input, { renderer: new MarkdownRenderer() });\r\n        expect(parsed).toBe(output);\r\n    });\r\n});"]}