{"version":3,"file":"markdownRenderer.js","sourceRoot":"","sources":["../src/markdownRenderer.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\r\n   Copyright 2019 Ron Buckton\r\n\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n*/\r\n\r\nimport { MarkedOptions } from 'marked';\r\n\r\nconst fence = \"```\";\r\nconst tick = \"`\";\r\n\r\nexport class MarkdownRenderer implements marked.Renderer {\r\n    public options:MarkedOptions = {};\r\n\r\n    private _tableHeader = \"\";\r\n\r\n    // blocks\r\n    heading(_text: string, level: number, raw: string): string {\r\n        return `${\"#\".repeat(level)} ${raw}\\n`;\r\n    }\r\n    hr(): string {\r\n        return `---\\n`;\r\n    }\r\n    blockquote(quote: string): string {\r\n        return `${quote.split(`\\n`).map(q => `> ${q}`).join(\"\\n\")}\\n`;\r\n    }\r\n    code(code: string, language: string, isEscaped: boolean): string {\r\n        return `${fence}${language || \"\"}\\n${isEscaped ? decode(code) : code}\\n${fence}\\n\\n`;\r\n    }\r\n    br(): string {\r\n        return `  \\n`;\r\n    }\r\n    list(body: string, ordered: boolean, start: number): string {\r\n        let ordinal = start;\r\n        return `\\n${body.replace(/{markdownRendererBullet}/g, () => ordered ? `${ordinal++}. ` : \"- \")}\\n`;\r\n    }\r\n    listitem(text: string): string {\r\n        return `{markdownRendererBullet}${text.split(/\\n/g).filter(line => !!line.trim()).join(\"\\n \")}\\n`;\r\n    }\r\n    paragraph(text: string): string {\r\n        return `${text}\\n\\n`;\r\n    }\r\n    table(header: string, body: string): string {\r\n        const tableHeader = this._tableHeader;\r\n        this._tableHeader = \"\";\r\n        return tableHeader\r\n            ? `\\n${header}|${tableHeader}\\n${body}\\n`\r\n            : `\\n${header}${body}\\n`;\r\n    }\r\n    tablecell(content: string, flags: { header: boolean; align: \"center\" | \"left\" | \"right\" | null; }): string {\r\n        if (flags.header) {\r\n            if (flags.align === \"center\" || flags.align === \"left\") {\r\n                this._tableHeader += \":\";\r\n            }\r\n            this._tableHeader += \"--\";\r\n            if (flags.align === \"center\" || flags.align === \"right\") {\r\n                this._tableHeader += \":\";\r\n            }\r\n            this._tableHeader += \"|\";\r\n        }\r\n        return ` ${content} |`;\r\n    }\r\n    tablerow(content: string): string {\r\n        return `|${content}\\n`;\r\n    }\r\n\r\n    // inlines\r\n    checkbox(checked:boolean):string {\r\n        return `[${checked ? 'x' : ' '}]`;\r\n    }\r\n    codespan(code: string): string {\r\n        return `${tick}${decode(code)}${tick}`;\r\n    }\r\n    del(text: string): string {\r\n        return `~~${text}~~`;\r\n    }\r\n    em(text: string): string {\r\n        return `*${text}*`;\r\n    }\r\n    strong(text: string): string {\r\n        return `**${text}**`;\r\n    }\r\n    html(html: string): string {\r\n        return html;\r\n    }\r\n    image(href: string, title: string | null, text: string): string {\r\n        // TODO: handle unescaped and unbalanced [] in text\r\n        // TODO: handle unescaped \", ', and () in title\r\n        return `![${decode(text)}](${href}${title !== null ? ` \"${decode(title)}\"` : \"\"})`;\r\n    }\r\n    link(href: string, title: string, text: string): string {\r\n        // TODO: handle unescaped \", ', and () in title\r\n        return `[${text}](${href}${title !== null ? ` \"${decode(title)}\"` : \"\"})`;\r\n    }\r\n    text(text: string): string {\r\n        return decode(text);\r\n    }\r\n}\r\n\r\nfunction decode(html: string) {\r\n    return html.replace(/&(amp|lt|gt|quot|#39);/g, _ => decode.replacements[_] || _);\r\n}\r\n\r\ndecode.replacements = {\r\n    '&amp;': '&',\r\n    '&lt;': '<',\r\n    '&gt;': '>',\r\n    '&quot;': '\"',\r\n    '&#39;': \"'\",\r\n} as Record<string, string>;\r\n"]}